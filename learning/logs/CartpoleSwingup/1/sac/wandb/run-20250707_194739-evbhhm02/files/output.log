INFO:2025-07-07 19:47:40,772:jax._src.xla_bridge:752: Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
[2025-07-07 19:47:40,772][jax._src.xla_bridge][INFO] - Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
[2025-07-07 19:47:40,931][root][INFO] - Using JAX default device: cuda:0.
[2025-07-07 19:47:40,931][root][INFO] - MJX Warp is disabled via MJX_WARP_ENABLED=false.
[2025-07-07 19:47:41,214][absl][INFO] - local_device_count: 1; total_device_count: 1
[2025-07-07 19:47:42,725][root][INFO] - Using JAX default device: cuda:0.
[2025-07-07 19:47:42,725][root][INFO] - MJX Warp is disabled via MJX_WARP_ENABLED=false.
[2025-07-07 19:47:47,163][root][INFO] - Using JAX default device: cuda:0.
[2025-07-07 19:47:47,163][root][INFO] - MJX Warp is disabled via MJX_WARP_ENABLED=false.
Error executing job with overrides: ['task=CartpoleSwingup']
Traceback (most recent call last):
  File "/home/sukchul/distributionally_robust_learning/learning/train.py", line 242, in train
    make_inference_fn, params, metrics = train_sac(cfg)
                                         ^^^^^^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/learning/train.py", line 210, in train_sac
    make_inference_fn, params, metrics = train_fn(
                                         ^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/brax/brax/training/agents/sac/train.py", line 516, in train
    eval_env = wrap_for_training(
               ^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/mujoco_playground/_src/wrapper.py", line 119, in wrap_for_brax_training
    env = BraxDomainRandomizationVmapWrapper(env, randomization_fn)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/mujoco_playground/_src/wrapper.py", line 162, in __init__
    self._mjx_model_v, self._in_axes = randomization_fn(self.mjx_model)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/mujoco_playground/_src/dm_control_suite/cartpole.py", line 350, in domain_randomize
    (geom_friction, body_ipos, body_mass, dof_frictionloss) = shift_dynamics(rng)
                                                              ^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/traceback_util.py", line 182, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/api.py", line 1129, in vmap_f
    out_flat = batching.batch(
               ^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/linear_util.py", line 211, in call_wrapped
    return self.f_transformed(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/interpreters/batching.py", line 618, in _batch_outer
    outs, trace = f(tag, in_dims, *in_vals)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/interpreters/batching.py", line 634, in _batch_inner
    outs = f(*in_tracers)
           ^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/interpreters/batching.py", line 342, in flatten_fun_for_vmap
    ans = f(*py_args, **py_kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/linear_util.py", line 396, in _get_result_paths_thunk
    ans = _fun(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/distributionally_robust_learning/mujoco_playground/_src/dm_control_suite/cartpole.py", line 296, in shift_dynamics
    geom_friction = model.geom_friction.at[FLOOR_GEOM_ID, 0].set(deterministic_cfg['floor_friction'])
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/numpy/array_methods.py", line 814, in set
    return scatter._scatter_update(self.array, self.index, values, lax.scatter,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/ops/scatter.py", line 92, in _scatter_update
    return internal_scatter(x, y, dynamic_idx)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/ops/scatter.py", line 145, in _scatter_impl
    out = scatter_op(
          ^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/lax/slicing.py", line 876, in scatter
    return scatter_p.bind(
           ^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/core.py", line 536, in bind
    return self._true_bind(*args, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/sukchul/miniconda3/envs/mujoco/lib/python3.12/site-packages/jax/_src/core.py", line 541, in _true_bind
    raise escaped_tracer_error(arg)
jax.errors.UnexpectedTracerError: Encountered an unexpected tracer. A function transformed by JAX had a side effect, allowing for a reference to an intermediate value with type float32[5,3] wrapped in a BatchTracer to escape the scope of the transformation.
JAX transformations require that functions explicitly return their outputs, and disallow saving intermediate values to global state.
To catch the leak earlier, try setting the environment variable JAX_CHECK_TRACER_LEAKS or using the `jax.checking_leaks` context manager.
See https://docs.jax.dev/en/latest/errors.html#jax.errors.UnexpectedTracerError

Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.
